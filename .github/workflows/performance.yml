name: Performance Testing

on:
  workflow_dispatch:
    inputs:
      benchmark_type:
        description: 'Type of benchmark to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - database
          - pipeline
          - ml
          - concurrent
      duration:
        description: 'Benchmark duration in seconds'
        required: false
        default: '60'
        type: string
  schedule:
    - cron: '0 2 * * 0'  # Weekly performance regression check

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-test-image:
    name: Build Test Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.image.outputs.image }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build performance test image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: test
          load: true
          tags: local/fps-genie-perf:latest
          cache-from: type=gha

      - name: Output image
        id: image
        run: echo "image=local/fps-genie-perf:latest" >> $GITHUB_OUTPUT

  performance-test:
    name: Run Performance Tests
    runs-on: ubuntu-latest
    needs: build-test-image
    services:
      postgres:
        image: timescale/timescaledb:latest-pg15
        env:
          POSTGRES_PASSWORD: cs2_password
          POSTGRES_USER: cs2_user
          POSTGRES_DB: cs2_analysis_perf
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 3s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Run performance benchmarks
        run: |
          docker run --rm \
            --network ${{ job.services.postgres.network }} \
            -e DATABASE_URL="postgresql://cs2_user:cs2_password@postgres:5432/cs2_analysis_perf" \
            -e REDIS_URL="redis://redis:6379" \
            -e BENCHMARK_TYPE="${{ github.event.inputs.benchmark_type || 'all' }}" \
            -e BENCHMARK_DURATION="${{ github.event.inputs.duration || '60' }}" \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            ${{ needs.build-test-image.outputs.image }} \
            bash -c "
              echo 'Running performance benchmarks...'
              cargo bench --workspace
              echo 'Performance tests completed'
            "

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: benchmark-results
          path: |
            target/criterion/
            **/*.json
            **/*.html
