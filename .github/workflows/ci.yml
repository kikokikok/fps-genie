name: CI

on:
  push:
    branches: [ main, master, dev, develop ]
  pull_request:
    branches: [ main, master, dev, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  docker-build:
    name: Docker Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/kikokikok/fps-genie
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: false

  docker-test:
    name: Docker Integration Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: timescale/timescaledb:latest-pg15
        env:
          POSTGRES_PASSWORD: cs2_password
          POSTGRES_USER: cs2_user
          POSTGRES_DB: cs2_analysis_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      qdrant:
        image: qdrant/qdrant:latest
        ports:
          - 6333:6333
          - 6334:6334

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for testing
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: fps-genie:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Wait for services to be ready
        run: |
          # Wait for PostgreSQL to be ready
          timeout 60 bash -c 'until pg_isready -h localhost -p 5432 -U cs2_user; do sleep 1; done'
          
          # Wait for Qdrant to be ready
          timeout 60 bash -c 'until curl -f http://localhost:6333/health; do sleep 1; done'

      - name: Setup test database
        run: |
          PGPASSWORD=cs2_password psql -h localhost -U cs2_user -d cs2_analysis_test -c "CREATE EXTENSION IF NOT EXISTS timescaledb;"
        env:
          PGPASSWORD: cs2_password

      - name: Test Docker image help commands
        run: |
          docker run --rm fps-genie:test cs2-data-pipeline --help
          docker run --rm fps-genie:test cs2-demo-analyzer --help
          docker run --rm fps-genie:test cs2-analytics --help

      - name: Test Docker image with network services
        run: |
          docker run --rm --network host \
            -e DATABASE_URL=postgresql://cs2_user:cs2_password@localhost:5432/cs2_analysis_test \
            -e QDRANT_URL=http://localhost:6333 \
            fps-genie:test cs2-data-pipeline --version
