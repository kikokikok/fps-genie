apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: fps-genie
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: timescale/timescaledb:latest-pg15
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: cs2_analysis
        - name: POSTGRES_USER
          value: cs2_user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fps-genie-secrets
              key: postgres-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: init-sql
          mountPath: /docker-entrypoint-initdb.d/init.sql
          subPath: init.sql
        command: ["postgres"]
        args: ["-c", "shared_preload_libraries=timescaledb"]
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: init-sql
        configMap:
          name: postgres-init-sql
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: fps-genie
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
  clusterIP: None  # Headless service for StatefulSet
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-sql
  namespace: fps-genie
data:
  init.sql: |
    -- Initialize TimescaleDB extension
    CREATE EXTENSION IF NOT EXISTS timescaledb;
    
    -- Basic schema setup
    CREATE TABLE IF NOT EXISTS matches (
        id SERIAL PRIMARY KEY,
        map_name VARCHAR(255),
        match_date TIMESTAMPTZ DEFAULT NOW()
    );
    
    CREATE TABLE IF NOT EXISTS player_snapshots (
        id BIGSERIAL PRIMARY KEY,
        match_id INTEGER REFERENCES matches(id),
        player_id INTEGER,
        timestamp TIMESTAMPTZ NOT NULL,
        position_x REAL,
        position_y REAL,
        position_z REAL
    );
    
    -- Convert to hypertable for time-series optimization
    SELECT create_hypertable('player_snapshots', 'timestamp', if_not_exists => TRUE);