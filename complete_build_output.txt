warning: profiles for the non root package will be ignored, specify profiles at the workspace root:
package:   /Users/christian.klat/dev/git/fps-genie/cs2-demo-parser/Cargo.toml
workspace: /Users/christian.klat/dev/git/fps-genie/Cargo.toml
warning: unreachable pattern
   --> cs2-demo-parser/src/second_pass/variants.rs:465:13
    |
465 |             _ => {}
    |             ^ no value can reach this
    |
note: multiple earlier patterns match some of the same values
   --> cs2-demo-parser/src/second_pass/variants.rs:465:13
    |
412 |             Some(Variant::F32(p)) => match self {
    |             --------------------- matches some of the same values
...
416 |             Some(Variant::I32(p)) => match self {
    |             --------------------- matches some of the same values
...
420 |             Some(Variant::String(p)) => match self {
    |             ------------------------ matches some of the same values
...
424 |             Some(Variant::U32(p)) => match self {
    |             --------------------- matches some of the same values
...
465 |             _ => {}
    |             ^ ...and 10 other patterns collectively make this unreachable
    = note: `#[warn(unreachable_patterns)]` on by default

warning: methods `second_pass_threaded_with_channels` and `second_pass_multi_threaded_no_channels` are never used
   --> cs2-demo-parser/src/parse_demo.rs:114:8
    |
54  | impl<'a> Parser<'a> {
    | ------------------- methods in this implementation
...
114 |     fn second_pass_threaded_with_channels(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
169 |     fn second_pass_multi_threaded_no_channels(&self, outer_bytes: &[u8], first_pass_output: FirstPassOutput) -> Result<DemoOutput, DemoPa...
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: `cs2-demo-parser` (lib) generated 2 warnings
   Compiling cs2-ml v0.1.0 (/Users/christian.klat/dev/git/fps-genie/cs2-ml)
warning: unused variable: `round_events`
   --> cs2-data-pipeline/src/pipeline.rs:250:13
    |
250 |         let round_events: std::collections::HashMap<u32, bool> = demo_output.game_events
    |             ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_round_events`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: variable does not need to be mutable
   --> cs2-data-pipeline/src/pipeline.rs:258:13
    |
258 |         let mut current_round = 1;
    |             ----^^^^^^^^^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: associated function `extract_player_snapshots_from_tick` is never used
   --> cs2-data-pipeline/src/pipeline.rs:289:8
    |
46  | impl DemoProcessor {
    | ------------------ associated function in this implementation
...
289 |     fn extract_player_snapshots_from_tick(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: `cs2-data-pipeline` (lib) generated 3 warnings (run `cargo fix --lib -p cs2-data-pipeline` to apply 1 suggestion)
   Compiling cs2-data-pipeline v0.1.0 (/Users/christian.klat/dev/git/fps-genie/cs2-data-pipeline)
warning: unused imports: `FileReader` and `SerializedFileReader`
  --> cs2-ml/src/data.rs:18:29
   |
18 | use parquet::file::reader::{SerializedFileReader, FileReader};
   |                             ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::fs::File`
  --> cs2-ml/src/data.rs:19:5
   |
19 | use std::fs::File;
   |     ^^^^^^^^^^^^^

warning: unused import: `parquet::record::RowAccessor`
  --> cs2-ml/src/data.rs:20:5
   |
20 | use parquet::record::RowAccessor;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

   Compiling cs2-integration-tests v0.1.0 (/Users/christian.klat/dev/git/fps-genie/cs2-integration-tests)
warning: `cs2-ml` (lib) generated 3 warnings (run `cargo fix --lib -p cs2-ml` to apply 3 suggestions)
   Compiling cs2-analytics v0.1.0 (/Users/christian.klat/dev/git/fps-genie/cs2-analytics)
   Compiling cs2-demo-analyzer v0.1.0 (/Users/christian.klat/dev/git/fps-genie/cs2-demo-analyzer)
warning: unused import: `anyhow::Result`
 --> cs2-integration-tests/src/e2e_tests.rs:1:5
  |
1 | use anyhow::Result;
  |     ^^^^^^^^^^^^^^
  |
help: if this is a test module, consider adding a `#[cfg(test)]` to the containing module
 --> cs2-integration-tests/src/lib.rs:2:1
  |
2 | pub mod e2e_tests;
  | ^^^^^^^^^^^^^^^^^^
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::time::Duration`
 --> cs2-integration-tests/src/e2e_tests.rs:2:5
  |
2 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^
  |
help: if this is a test module, consider adding a `#[cfg(test)]` to the containing module
 --> cs2-integration-tests/src/lib.rs:2:1
  |
2 | pub mod e2e_tests;
  | ^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::timeout`
 --> cs2-integration-tests/src/e2e_tests.rs:3:5
  |
3 | use tokio::time::timeout;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
help: if this is a test module, consider adding a `#[cfg(test)]` to the containing module
 --> cs2-integration-tests/src/lib.rs:2:1
  |
2 | pub mod e2e_tests;
  | ^^^^^^^^^^^^^^^^^^

warning: unused imports: `info` and `warn`
 --> cs2-integration-tests/src/e2e_tests.rs:4:15
  |
4 | use tracing::{info, warn};
  |               ^^^^  ^^^^
  |
help: if this is a test module, consider adding a `#[cfg(test)]` to the containing module
 --> cs2-integration-tests/src/lib.rs:2:1
  |
2 | pub mod e2e_tests;
  | ^^^^^^^^^^^^^^^^^^

warning: unused import: `uuid::Uuid`
 --> cs2-integration-tests/src/e2e_tests.rs:5:5
  |
5 | use uuid::Uuid;
  |     ^^^^^^^^^^
  |
help: if this is a test module, consider adding a `#[cfg(test)]` to the containing module
 --> cs2-integration-tests/src/lib.rs:2:1
  |
2 | pub mod e2e_tests;
  | ^^^^^^^^^^^^^^^^^^

warning: unused imports: `TestDataFactory` and `TestInfrastructure`
 --> cs2-integration-tests/src/e2e_tests.rs:7:34
  |
7 | use crate::test_infrastructure::{TestInfrastructure, TestDataFactory};
  |                                  ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^
  |
help: if this is a test module, consider adding a `#[cfg(test)]` to the containing module
 --> cs2-integration-tests/src/lib.rs:2:1
  |
2 | pub mod e2e_tests;
  | ^^^^^^^^^^^^^^^^^^

warning: unused import: `ProcessingStatus`
 --> cs2-integration-tests/src/e2e_tests.rs:8:25
  |
8 | use cs2_data_pipeline::{ProcessingStatus};
  |                         ^^^^^^^^^^^^^^^^
  |
help: if this is a test module, consider adding a `#[cfg(test)]` to the containing module
 --> cs2-integration-tests/src/lib.rs:2:1
  |
2 | pub mod e2e_tests;
  | ^^^^^^^^^^^^^^^^^^

warning: unused variable: `config_path`
  --> cs2-analytics/src/training.rs:24:9
   |
24 |         config_path: Option<PathBuf>,
   |         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_config_path`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `pro_players`
  --> cs2-analytics/src/analysis.rs:41:9
   |
41 |         pro_players: Option<String>,
   |         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_pro_players`

warning: unused variable: `matches`
  --> cs2-analytics/src/analysis.rs:73:41
   |
73 |     async fn analyze_positioning(&self, matches: Option<String>, players: Option<String>) -> Result<()> {
   |                                         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_matches`

warning: unused variable: `players`
  --> cs2-analytics/src/analysis.rs:73:66
   |
73 |     async fn analyze_positioning(&self, matches: Option<String>, players: Option<String>) -> Result<()> {
   |                                                                  ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_players`

warning: unused variable: `matches`
  --> cs2-analytics/src/analysis.rs:85:37
   |
85 |     async fn analyze_economy(&self, matches: Option<String>, players: Option<String>) -> Result<()> {
   |                                     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_matches`

warning: unused variable: `players`
  --> cs2-analytics/src/analysis.rs:85:62
   |
85 |     async fn analyze_economy(&self, matches: Option<String>, players: Option<String>) -> Result<()> {
   |                                                              ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_players`

warning: unused variable: `matches`
  --> cs2-analytics/src/analysis.rs:97:48
   |
97 |     async fn analyze_clutch_performance(&self, matches: Option<String>, players: Option<String>) -> Result<()> {
   |                                                ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_matches`

warning: unused variable: `players`
  --> cs2-analytics/src/analysis.rs:97:73
   |
97 |     async fn analyze_clutch_performance(&self, matches: Option<String>, players: Option<String>) -> Result<()> {
   |                                                                         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_players`

warning: unused variable: `input_path`
  --> cs2-analytics/src/visualization.rs:47:47
   |
47 |     async fn generate_trajectory_plots(&self, input_path: &PathBuf) -> Result<()> {
   |                                               ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_input_path`

warning: unused variable: `input_path`
  --> cs2-analytics/src/visualization.rs:63:48
   |
63 |     async fn generate_performance_radar(&self, input_path: &PathBuf) -> Result<()> {
   |                                                ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_input_path`

warning: unused variable: `input_path`
  --> cs2-analytics/src/visualization.rs:79:48
   |
79 |     async fn generate_timeline_analysis(&self, input_path: &PathBuf) -> Result<()> {
   |                                                ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_input_path`

warning: fields `database_url` and `qdrant_url` are never read
 --> cs2-analytics/src/training.rs:7:5
  |
6 | pub struct TrainingPipeline {
  |            ---------------- fields in this struct
7 |     database_url: String,
  |     ^^^^^^^^^^^^
8 |     qdrant_url: String,
  |     ^^^^^^^^^^
  |
  = note: `#[warn(dead_code)]` on by default

warning: fields `batch_size`, `learning_rate`, `model_architecture`, and `data_augmentation` are never read
  --> cs2-analytics/src/training.rs:80:9
   |
79 | pub struct TrainingConfig {
   |            -------------- fields in this struct
80 |     pub batch_size: usize,
   |         ^^^^^^^^^^
81 |     pub learning_rate: f64,
   |         ^^^^^^^^^^^^^
82 |     pub model_architecture: ModelArchitecture,
   |         ^^^^^^^^^^^^^^^^^^
83 |     pub data_augmentation: bool,
   |         ^^^^^^^^^^^^^^^^^

warning: fields `hidden_layers`, `dropout_rate`, and `activation` are never read
  --> cs2-analytics/src/training.rs:88:9
   |
87 | pub struct ModelArchitecture {
   |            ----------------- fields in this struct
88 |     pub hidden_layers: Vec<usize>,
   |         ^^^^^^^^^^^^^
89 |     pub dropout_rate: f64,
   |         ^^^^^^^^^^^^
90 |     pub activation: String,
   |         ^^^^^^^^^^

warning: fields `database_url` and `qdrant_url` are never read
 --> cs2-analytics/src/analysis.rs:6:5
  |
5 | pub struct AdvancedAnalytics {
  |            ----------------- fields in this struct
6 |     database_url: String,
  |     ^^^^^^^^^^^^
7 |     qdrant_url: String,
  |     ^^^^^^^^^^

warning: struct `AdvancedModels` is never constructed
 --> cs2-analytics/src/models.rs:2:12
  |
2 | pub struct AdvancedModels;
  |            ^^^^^^^^^^^^^^

warning: associated functions `behavior_cloning_model` and `crosshair_model` are never used
  --> cs2-analytics/src/models.rs:6:12
   |
4  | impl AdvancedModels {
   | ------------------- associated functions in this implementation
5  |     /// Behavior cloning model for professional player actions
6  |     pub fn behavior_cloning_model() -> BehaviorCloningConfig {
   |            ^^^^^^^^^^^^^^^^^^^^^^
...
16 |     pub fn crosshair_model() -> CrosshairConfig {
   |            ^^^^^^^^^^^^^^^

warning: fields `sequence_length`, `hidden_size`, `num_layers`, and `dropout` are never read
  --> cs2-analytics/src/models.rs:27:9
   |
26 | pub struct BehaviorCloningConfig {
   |            --------------------- fields in this struct
27 |     pub sequence_length: usize,
   |         ^^^^^^^^^^^^^^^
28 |     pub hidden_size: usize,
   |         ^^^^^^^^^^^
29 |     pub num_layers: usize,
   |         ^^^^^^^^^^
30 |     pub dropout: f32,
   |         ^^^^^^^

warning: fields `input_features`, `hidden_layers`, and `output_features` are never read
  --> cs2-analytics/src/models.rs:35:9
   |
34 | pub struct CrosshairConfig {
   |            --------------- fields in this struct
35 |     pub input_features: usize,
   |         ^^^^^^^^^^^^^^
36 |     pub hidden_layers: Vec<usize>,
   |         ^^^^^^^^^^^^^
37 |     pub output_features: usize,
   |         ^^^^^^^^^^^^^^^

warning: `cs2-integration-tests` (lib) generated 7 warnings (run `cargo fix --lib -p cs2-integration-tests` to apply 7 suggestions)
warning: fields `layer1`, `layer2`, `output_layer`, `input_dim`, `output_dim`, and `device` are never read
  --> cs2-ml/src/model.rs:7:5
   |
6  | pub struct BehaviorNet {
   |            ----------- fields in this struct
7  |     layer1: Linear,
   |     ^^^^^^
8  |     layer2: Linear,
   |     ^^^^^^
9  |     output_layer: Linear,
   |     ^^^^^^^^^^^^
10 |     pub input_dim: usize,
   |         ^^^^^^^^^
11 |     pub output_dim: usize,
   |         ^^^^^^^^^^
12 |     device: Device,
   |     ^^^^^^
   |
   = note: `BehaviorNet` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: associated items `forward`, `forward_vec`, `predict`, and `load` are never used
  --> cs2-ml/src/model.rs:34:12
   |
15 | impl BehaviorNet {
   | ---------------- associated items in this implementation
...
34 |     pub fn forward(&self, input: &Tensor) -> Result<Tensor> {
   |            ^^^^^^^
...
43 |     pub fn forward_vec(&self, input: &[f32]) -> Result<Vec<f32>> {
   |            ^^^^^^^^^^^
...
57 |     pub fn predict(&self, input: &cs2_common::InputVector) -> cs2_common::OutputVector {
   |            ^^^^^^^
...
92 |     pub fn load(path: &str, input_dim: usize, output_dim: usize, device: Device) -> Result<Self> {
   |            ^^^^

warning: function `serve_with_model_with_shutdown` is never used
  --> cs2-ml/src/server.rs:45:8
   |
45 | pub fn serve_with_model_with_shutdown(
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: `cs2-analytics` (bin "cs2-analytics") generated 19 warnings
warning: `cs2-ml` (bin "cs2-ml") generated 6 warnings (3 duplicates)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 4.91s
Build completed
